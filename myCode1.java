/*
Question: input is a non-empty string. output is a hashcode generated by following:
1. For every vowel in input string, multiply the index by 5. add non-zero positive odd integers from 1 to sum.
and if oddsum is not a single digit then keep adding every digits of oddsum to get new oddsum having single digit,
then replace vowel at index with oddsum.
2.if there are no vowels in input string return -1;


Example:
sample input:
program

sample output:
pr7gr7m

*/
import java.io.*;
import java.util.*;

public class myCode1
{
    public static void main (String[] args) throws java.lang.Exception
    {
        
        Scanner s = new Scanner(System.in);
        String inputString = s.nextLine();
        String outstr="", outnum="";
        int tempOutnum = 0;
        String[] inputArray = inputString.split("");
        boolean vowelFound = false;
        
        for(int i=0; i<inputString.length(); i++) {
            if(inputArray[i].equals("a") || inputArray[i].equals("e") || inputArray[i].equals("i") || inputArray[i].equals("o") || inputArray[i].equals("u") || inputArray[i].equals("A") || inputArray[i].equals("E") || inputArray[i].equals("I") || inputArray[i].equals("O") || inputArray[i].equals("U")) {
                vowelFound = true;
                tempOutnum = 0;
                outnum = "";
                for(int j=1; j<=(i*5); j++)
                    if(j%2 == 1)
                        tempOutnum += j;
                outnum = Integer.toString(tempOutnum);
                while (outnum.length() != 1) {
                    int temp = 0;
                    for(String number: outnum.split(""))
                        temp += Integer.parseInt(number);
                    outnum = Integer.toString(temp);
                }
                inputArray[i] = outnum;
            }
        }
        if(!vowelFound) {
            System.out.print("-1");
        }else {
            for(String hashItem: inputArray)
                outstr += hashItem;
            System.out.println(outstr);
        }
    }
}